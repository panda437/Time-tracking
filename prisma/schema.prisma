generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  timezone  String   @default("UTC")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  entries   TimeEntry[]
  goals     UserGoal[]
  
  @@map("users")
}

model TimeEntry {
  id          String   @id @default(cuid())
  userId      String
  activity    String
  description String?
  duration    Int      // in minutes
  startTime   DateTime
  endTime     DateTime
  date        DateTime // for easy calendar queries
  category    String   @default("general")
  mood        String?  // emoji or mood indicator
  tags        String   @default("") // for flexible categorization (JSON string)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Indexes for performance
  @@index([userId, date]) // Fast calendar queries per user
  @@index([userId, startTime]) // Fast time-based queries
  @@index([userId, category]) // Fast category filtering
  @@index([date]) // General date queries
  @@map("time_entries")
}

model UserGoal {
  id        String   @id @default(cuid())
  userId    String
  goal      String   // Study, Workout, Improve Focus, or custom goal
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@map("user_goals")
}
